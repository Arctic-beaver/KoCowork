<Window x:Class="CoCoworkView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:viewmodels="clr-namespace:CoCowork.UI.ViewModels" 
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
        mc:Ignorable="d"
        Title="Коворк под контролем" Height="600"  Width="1000" Background="#FFB7BBC2">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Booking.GetMiniOffices}"/>
            <i:InvokeCommandAction Command="{Binding Booking.GetConferenceRooms}"/>
            <i:InvokeCommandAction Command="{Binding Booking.GetMeetingRooms}"/>
            <i:InvokeCommandAction Command="{Binding Booking.GetPlaces}"/>
            <i:InvokeCommandAction Command="{Binding Booking.GetComputers}"/>
            <i:InvokeCommandAction Command="{Binding Product.GetProductsCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent},
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource"
                                 Background="Transparent"
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="#FF807463"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="80*"/>
        </Grid.ColumnDefinitions>

        <Grid x:Name="LeftGrid" Grid.Column ="0" Background="#FFE0DFDF" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15*"/>
                <ColumnDefinition Width="70*"/>
                <ColumnDefinition Width="15*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Button x:Name="BookingButton" Command="{Binding MakeGridVisible}" CommandParameter="{Binding Booking}" Content="Аренда" Grid.Column="1" Grid.Row="1" Margin="0, 18, 0, 18"/>
            <Button x:Name="ProductsButton" Command="{Binding MakeGridVisible}" CommandParameter="{Binding Product}" Content="Товары" Grid.Column="1" Grid.Row="2" Margin="0, 18, 0, 18"/>
            <Button x:Name="ClientsButton" Command="{Binding MakeGridVisible}" CommandParameter="{Binding Client}" Content="Клиенты" Grid.Column="1" Grid.Row="3" Margin="0, 18, 0, 18"/>
            <Button x:Name="OrderHistoryButton" Command="{Binding MakeGridVisible}" CommandParameter="{Binding Order}" Content="История заказов" Grid.Column="1" Grid.Row="4" Margin="0, 18, 0, 18"/>
            <Button x:Name="CurrentOrderButton" Command="{Binding MakeGridVisible}" CommandParameter="{Binding CurrentOrder}" Content="Текущий заказ" Grid.Column="1" Grid.Row="5" Margin="0, 18, 0, 18"/>
        </Grid>

        <Grid x:Name="BookingGrid" Grid.Column ="1" Visibility="{Binding GridVisibility}" DataContext="{Binding Booking}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70*"/>
                <ColumnDefinition Width="25*"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="RightBoookingGrid" Grid.Column ="3" Grid.RowSpan="6" Background="#FFE0DFDF" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15*"/>
                    <ColumnDefinition Width="70*"/>
                    <ColumnDefinition Width="15*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Button Content="показать свободные"  Grid.Column="1" Grid.Row="0" Margin="0, 15, 0, 15"/>
                <Label Content="с" Grid.Column="0" Grid.Row="1" Margin="12 0 0 0"/>
                <DatePicker Grid.Column="1" Grid.Row="1" Margin="0 0 0 40"/>
                <Label Content="по" Grid.Column="0" Grid.Row="1" Margin="5 35 0 0" Grid.RowSpan="2"/>
                <DatePicker Grid.Column="1" Grid.Row="1" Margin="0 37 0 75" Grid.RowSpan="2"/>

                <Button x:Name="AddNewButton" Content="Инсертнуть" Grid.Column="1" Grid.Row="2" Margin="0, 30, 0, 0"/>
                <Button x:Name="EditButton" Content="Редактировать" Grid.Column="1" Grid.Row="4"
                        Margin="0, 15, 0, 15" Command="{Binding MiniOfficeVM.ChangeMiniOfficeEditVisibility}"/>
                <Button x:Name="AddToOrderButton" Content="Добавить к заказу" Grid.Column="1" Grid.Row="5" Margin="0, 15, 0, 15"/>
                <Button x:Name="DeleteButton" Content="Удалить" Grid.Column="1" Grid.Row="6"
                        Margin="0, 15, 0, 15"/>
            </Grid>
            <Grid x:Name="MainBookingGrid" Grid.Column ="0" Background="DarkGray" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25*"/>
                    <ColumnDefinition Width="25*"/>
                    <ColumnDefinition Width="25*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="26"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="26"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="26"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Label Content="Места" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="0" FontFamily="Arial Black"/>
                <Label Content="Миниофисы" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0" FontFamily="Arial Black"/>
                <Label Content="Переговорные" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="4" FontFamily="Arial Black"/>
                <Label Content="Конференц-залы" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="2" FontFamily="Arial Black"/>
                <Label Content="Компьютеры" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="0" FontFamily="Arial Black"/>

                <DataGrid x:Name="MiniOffices" AutoGenerateColumns="False" Margin="2 0 2 0" Grid.Column="0" Grid.Row="1" CanUserAddRows="False" 
                      ItemsSource="{Binding MiniOffices}" SelectedItem="{Binding Path=BookingSelectedItem, Mode=TwoWay}" ColumnWidth="*" CanUserDeleteRows="False">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Background" Value="Lavender"/>
                            <Setter Property="BorderThickness" Value="0, 0, 1, 2"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Описание"  Width="auto" Binding="{Binding Name}"/>
                        <DataGridTextColumn Header="Цена за день"  Width="auto" Binding="{Binding PricePerDay}"/>
                        <DataGridTextColumn Header="Кол-во мест"  Width="auto" Binding="{Binding AmountOfPlaces}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <DataGrid x:Name="Places" AutoGenerateColumns="False" Grid.Column="1" Margin="2 0 2 0" Grid.Row="1" CanUserAddRows="False" Grid.RowSpan="5"
                      ItemsSource="{Binding Places}" SelectedItem="{Binding Path=BookingSelectedItem, Mode=TwoWay}" ColumnWidth="*" CanUserDeleteRows="False">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Background" Value="Lavender"/>
                            <Setter Property="BorderThickness" Value="0, 0, 1, 2"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="№"  Width="auto" Binding="{Binding Number}"/>
                        <DataGridTextColumn Header="Описание"  Width="auto" Binding="{Binding Description}"/>
                        <DataGridTextColumn Header="Цена/день"  Width="auto" Binding="{Binding PricePerDay}"/>
                        <DataGridTextColumn Header="Фикс цена/день"  Width="auto" Binding="{Binding PriceFixedPerDay}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <DataGrid x:Name="MeetingRooms" AutoGenerateColumns="False" Grid.Column="0" Grid.Row="5" CanUserAddRows="False" CanUserDeleteRows="False" 
                      ItemsSource="{Binding MeetingRooms}" SelectedItem="{Binding Path=BookingSelectedItem, Mode=TwoWay}" ColumnWidth="*">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Background" Value="Lavender"/>
                            <Setter Property="BorderThickness" Value="0, 0, 1, 2"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Цена за час"  Width="auto" Binding="{Binding PricePerHour}"/>
                        <DataGridTextColumn Header="Кол-во мест"  Width="auto" Binding="{Binding AmountOfPeople}"/>
                        <DataGridTextColumn Header="Описание"  Width="auto" Binding="{Binding Description}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <DataGrid x:Name="ConferenceRooms" AutoGenerateColumns="False" Margin="2 0 2 0" Grid.Column="0" Grid.Row="3" CanUserAddRows="False"
                      ItemsSource="{Binding ConferenceRooms}" SelectedItem="{Binding Path=BookingSelectedItem, Mode=TwoWay}" ColumnWidth="*" CanUserDeleteRows="False">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Background" Value="Lavender"/>
                            <Setter Property="BorderThickness" Value="0, 0, 1, 2"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Цена за час"  Width="auto" Binding="{Binding PricePerHour}"/>
                        <DataGridTextColumn Header="Кол-во мест"  Width="auto" Binding="{Binding AmountOfPeople}"/>
                        <DataGridTextColumn Header="Описание"  Width="auto" Binding="{Binding Description}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <DataGrid x:Name="Computers" AutoGenerateColumns="False" Margin="0 0 0 0" Width="auto" Grid.Column="2" Grid.Row="1" CanUserAddRows="False" Grid.RowSpan="5"
                      ItemsSource="{Binding Computers}" SelectedItem="{Binding Path=BookingSelectedItem, Mode=TwoWay}" ColumnWidth="*" CanUserDeleteRows="False">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Background" Value="Lavender"/>
                            <Setter Property="BorderThickness" Value="0, 0, 1, 2"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="№"  Width="auto" Binding="{Binding Number}"/>
                        <DataGridTextColumn Header="Тип"  Width="auto" Binding="{Binding Name}"/>
                        <DataGridTextColumn Header="Описание"  Width="auto" Binding="{Binding Description}"/>
                        <DataGridTextColumn Header="Цена/месяц"  Width="auto" Binding="{Binding PricePerMonth}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Grid x:Name="AddMiniOfficeGrid" Visibility="{Binding MiniOfficeVM.GridVisibility}" Grid.Column ="3" Grid.RowSpan="6"
                      Background="#FFE0DFDF" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid.Effect>
                        <DropShadowEffect Color="Black" ShadowDepth="0.01"/>
                    </Grid.Effect>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button x:Name="AddFinallyMiniOfficeButton" Command="{Binding ChangeMiniOfficeEditVisibility}" CommandParameter="{Binding MiniOfficeVM}"
                            Content="Добавить оплату" Grid.Column="0" Grid.Row="6" Margin="15, 0, 15, 30"/>
                </Grid>
            </Grid>
        </Grid>

        <Grid x:Name="ProductsGrid" Grid.Column ="1" DataContext="{Binding Product}" Visibility="{Binding GridVisibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75*"/>
                <ColumnDefinition Width="25*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="RightProductsGrid" Grid.Column ="2" Background="#FFE0DFDF" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15*"/>
                    <ColumnDefinition Width="70*"/>
                    <ColumnDefinition Width="15*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Button x:Name="AddNewProductButton" Command="{Binding AddNewProductViewModel.ChangeProductVisibility}" Content="Инсертнуть" Grid.Column="1" Grid.Row="1" Margin="0, 0, 0, 50"/>
                <StackPanel x:Name="ProductPanelChekBox" Grid.Column="1" Grid.Row="2"  Margin="0,0,0,20">
                    <CheckBox Content="Товары в наличии" Margin="0, 5, 0, 0" />

                </StackPanel>
                <Button x:Name="EditProductButton" Content="Редактировать" Grid.Column="1" Grid.Row="3" Margin="0, 0, 0, 50"/>
                <Button x:Name="AddToProductOrderButton" Content="Добавить к заказу" Grid.Column="1" Grid.Row="4" Margin="0, 45, 0, 0"/>
            </Grid>
            <Grid x:Name ="MainProductGrid" Grid.Column ="0" Background="#FFE0DFDF" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <DataGrid x:Name="ProductsDataGrid" ItemsSource="{Binding Products}" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" 
                          CanUserSortColumns="True" AutoGenerateColumns="False" Grid.Column="0" Grid.Row="0" ColumnWidth="*" SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Background" Value="Lavender"/>
                            <Setter Property="BorderThickness" Value="0, 0, 1, 2"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Наименование" Width ="auto" Binding="{Binding Name}"/>
                        <DataGridTextColumn Header="Цена за шт" Width ="auto" Binding="{Binding PriceForOne}"/>
                        <DataGridTextColumn Header="Количество" Width ="auto" Binding="{Binding Amount}"/>
                        <DataGridTextColumn Header="Описание" Width ="auto" Binding="{Binding Description}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Grid x:Name ="AddProductGrid" Visibility ="{Binding AddNewProductViewModel.GridVisibility}" Grid.Column ="1" Background="#FFE0DFDF" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="200">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Label Name="ProductNameLabel" Grid.Row="2" Grid.Column ="1" Content="Введите товар:" Margin="15,0,0,0" />
                    <TextBox x:Name ="ProductName" Grid.Row ="2" Grid.Column ="1" Margin="15,25,15,0" Style="{StaticResource placeHolder}" Tag="Введите товар" Text="{Binding AddNewProductViewModel.Name}"/>
                    <Label Name="ProductPriceLabel" Grid.Row="3" Grid.Column ="1" Content="Введите цену:" Margin="15,0,0,0" />
                    <TextBox x:Name ="ProductPrice" Grid.Row ="3" Grid.Column ="1" Margin="15,25,15,0" Style="{StaticResource placeHolder}" Tag="Введите цену" Text="{Binding AddNewProductViewModel.PriceForOne}"/>
                    <Label Name="ProductAmountLabel" Grid.Row="4" Grid.Column ="1" Content="Введите количество:" Margin="15,0,0,0" />
                    <TextBox x:Name ="ProductAmount" Grid.Row ="4" Grid.Column ="1" Margin="15,25,15,0" Style="{StaticResource placeHolder}" Tag="Введите количество" Text="{Binding AddNewProductViewModel.Amount}"/>
                    <Label Name="ProductDescriptionLabel" Grid.Row="5" Grid.Column ="1" Content="Введите описание:" Margin="15,0,0,0" />
                    <TextBox x:Name ="ProductDescription" Grid.Row ="5" Grid.Column ="1" Margin="15,25,15,0" Style="{StaticResource placeHolder}" Tag="Введите описание" Text="{Binding AddNewProductViewModel.Description}"/>
                    <Button x:Name ="AddFinallyProduct" Content="Добавить новый товар" Grid.Row="7" Margin="15" Command="{Binding AddNewProduct}" />
                </Grid>
            </Grid>
        </Grid>




        <Grid x:Name="ClientsGrid" Grid.Column ="1" Visibility="{Binding Client.GridVisibility}">
            <Label>Text in client grid</Label>
        </Grid>

        <Grid x:Name="OrderGrid" Grid.Column ="1" Visibility="Hidden" DataContext="{Binding Order}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75*"/>
                <ColumnDefinition Width="25*"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="RightOrderGrid" Grid.Column ="2" Background="#FFE0DFDF" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15*"/>
                    <ColumnDefinition Width="70*"/>
                    <ColumnDefinition Width="15*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

              
                <Button x:Name="AddPaymentButton" IsEnabled="{Binding AreButtonsAvailable}" Command="{Binding Payment.ChangePaymentVisibility}" Content="Добавить оплату" Grid.Column="1" Grid.Row="1" Margin="0, 30, 0, 0"/>
                <Label Visibility="{Binding IsToolTipOn}" Grid.Column="1" Grid.Row="1" Margin="0, 30, 0, 0">
                    <Label.ToolTip>
                        <TextBlock>Для начала выберите заказ, к которому хотите добавить оплату, в списке.</TextBlock>
                    </Label.ToolTip>
                </Label>
                <Label Name="ShowLabel" Content="Показать:" Grid.Column="1" Grid.Row="2" Margin="0, 15, 0, 15" VerticalAlignment="Bottom"/>
                <StackPanel x:Name="CharacteristicsOfOrdersStackPanel" Grid.Row="3" Grid.Column="1" Grid.RowSpan="2" Margin="0, 10, 0, 10">
                    <CheckBox Content="Оплаченные" Margin="0, 5, 0, 0" IsChecked="{Binding ShowPaid}"/>
                    <CheckBox Content="Неоплаченные" Margin="0, 5, 0, 0" IsChecked="{Binding ShowUnpaid}"/>
                    <CheckBox Content="Текущие" Margin="0, 5, 0, 0" IsChecked="{Binding ShowActive}" IsEnabled="{Binding ShowActiveAvailability}" />
                    <CheckBox Content="Отменённые" Margin="0, 5, 0, 0" IsChecked="{Binding ShowCanceled}" IsEnabled="{Binding ShowCanceledAvailability}"/>
                </StackPanel>
                <Button x:Name="CancelOrderButton" Content="Отменить заказ" Grid.Column="1" Grid.Row="6" Margin="0, 0, 0, 30" IsEnabled="{Binding AreButtonsAvailable}"/>
                <Label Visibility="{Binding IsToolTipOn}" Grid.Column="1" Grid.Row="6" Margin="0, 0, 0, 30">
                    <Label.ToolTip>
                        <TextBlock>Для начала выберите заказ, который хотите удалить, в списке.</TextBlock>
                    </Label.ToolTip>
                </Label>
            </Grid>
            <Grid x:Name="MainOrderGrid" Grid.Column ="0" Background="#FFE0DFDF" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <DataGrid x:Name="OrdersDataGrid" ItemsSource="{Binding Orders}" SelectedItem="{Binding SelectedItem}" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="True"  Grid.Column="0" ColumnWidth="*"/>
                <Grid x:Name="AddPaymentGrid" Visibility="{Binding Payment.GridVisibility}" Grid.Column ="1" Background="#FFE0DFDF" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Label Name="AmountLabel" Grid.Row="1" Grid.Column="1" Content="Введите сумму платежа:" Margin="2, 35, 2, 0"/>
                    <TextBox x:Name="AmountTextBox" Grid.Row="2" Grid.Column="1" Text ="{Binding Payment.Amount}" Margin="15, 15, 15, 15"/>
                    <Label Name="DateLabel" Grid.Row="3" Grid.Column="1" Content="Выберите дату:" Margin="2, 35, 2, 0"/>
                    <DatePicker x:Name="PaymentDatePicker" Grid.Row="4" Grid.Column="1" SelectedDate ="{Binding Payment.PaymentDate}" Margin="15, 15, 15, 15"/> 
                    <Button x:Name="AddFinallyPaymentButton" IsEnabled="{Binding Payment.IsAddPaymentButtonAvailable}"  Command="{Binding Payment.ChangePaymentVisibility}" Content="Добавить оплату" Grid.Column="1" Grid.Row="6" Margin="15, 0, 15, 30"/>
                </Grid>
            </Grid>
        </Grid>

        <Grid x:Name="CurrentOrderGrid" Grid.Column ="1" Visibility="{Binding CurrentOrder.GridVisibility}">
            <Label>Text in current order grid</Label>
        </Grid>

        <Grid x:Name="MiniOfficeInsertGrid" Grid.Column ="1">

        </Grid>

        <Grid x:Name="ConferenceRoomInsertGrid" Grid.Column ="1">

        </Grid>

        <Grid x:Name="MeetingRoomInsertGrid" Grid.Column ="1">

        </Grid>

        <Grid x:Name="PlaceInsertGrid" Grid.Column ="1">

        </Grid>

        <Grid x:Name="ComputersInsertGrid" Grid.Column ="1">

        </Grid>

        <Grid x:Name="ProductsInsertGrid" Grid.Column ="1"/>
    </Grid>
</Window>
